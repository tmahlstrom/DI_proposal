from numpy.random import rand
import numpy as np
from scipy import stats
import csv
import os
import pandas as pd
import math
import ast
import json
from itertools import cycle, islice

from bokeh.core.properties import value
from bokeh.io import show, output_file
from bokeh.plotting import figure
from bokeh.models import HoverTool, FactorRange, ColumnDataSource

import matplotlib
import matplotlib.pyplot as plt
from matplotlib import cm
from matplotlib import rc
import seaborn as sns 
from matplotlib.colors import ListedColormap
import matplotlib.style as style
from matplotlib.patches import Patch
from matplotlib.font_manager import FontProperties
from matplotlib.colors import LinearSegmentedColormap

y_model_pred = []
y_elo_standard_pred = []


def main():
    plot_model_validation(y_model_pred, y_elo_standard_pred)


def plot_model_validation(y_model_pred, y_elo_standard_pred):
    style.use('seaborn-talk') 
    sns.set_style("white")
    sns.set_context("poster", font_scale=1.5,)
    font = {'fontname':'Adobe Hebrew'}
    bins = np.array([400 + 25 * x for x in range(150)])

    sns.distplot(y_elo_standard_pred, bins = bins, hist = True, kde=False, color = [102./255., 0, 25./255.],
            hist_kws = {"histtype"  : 'stepfilled', "alpha": 0.8},
            kde_kws = {'shade': True, 'linewidth': 1}, 
            label = 'standard system predictions')
    sns.distplot(y_model_pred, bins = bins, hist = True, kde=False, color = [0, 51./255., 102./255.], 
            hist_kws = {"histtype"  : 'stepfilled', "alpha": 0.8},
            kde_kws = {'shade': True, 'linewidth': 1},  
            label = 'my model predictions')
    sns.distplot(y_test, bins = bins, hist = True, kde=False, color = [218.0/255,165/255.0,32.0/255],
            hist_kws = {"histtype"  : 'stepfilled', "alpha": 0.4},
            kde_kws = {'shade': True, 'linewidth': 1}, label = 'target values')


    # p = df.ix[:, df.columns.difference(exclude)].T.plot(kind='bar', stacked=True, color = colors, edgecolor = 'black', figsize=(16,8), grid = None, legend=False, linewidth = 1.5)
    #plt.rcParams["font.size"] = 28
    plt.minorticks_off()
    #plt.setp(p, markerfacecolor='C0')
    x_ticks_int = [1000, 1200, 1400, 1600, 1800, 2000, 2200, 2400]
    x_ticks_str = [str(x) for x in x_ticks_int]
    
    plt.xticks(x_ticks_int, x_ticks_str, rotation='horizontal', fontsize=14, fontname = 'Lucida Console')
    plt.yticks([])
    plt.title("Elo densities of model predictions and target values", loc = 'center', y=0.99, bbox=dict(facecolor='white', edgecolor='black', boxstyle='square', linewidth = 1.0), fontsize=34, **font)
    plt.xlabel("Elo", fontsize=28, **font)
    plt.ylabel("Density",labelpad= 20, fontsize=28, **font)
    plt.xlim(900, 2500)
    plt.ylim(0.0, 110)

    # ax = plt.subplot(111)
    # box = ax.get_position()
    # ax.set_position([box.x0, box.y0, box.width * 0.8, box.height])
    
    map_colors = [(0, 51./255., 102./255.), (.7, .6, .7), (102./255., 0, 25./255.)] 
    cmap_name = 'my_custom_cmap'
    cmap = LinearSegmentedColormap.from_list(cmap_name, map_colors, N=9)

    
    legend_elements = [Patch(facecolor=[102./255., 0, 25./255., 0.8], edgecolor='black',
                        label='Standard Elo system', linewidth = 1.0),
                        Patch(facecolor= [0, 51./255., 102./255., 0.8], edgecolor='black',
                        label='My model predictions', linewidth = 1.0),
                        Patch(facecolor= [218.0/255,165/255.0,32.0/255, 0.4], edgecolor='black',
                        label='Actual values', linewidth = 1.0)]
    plt.legend(handles=legend_elements, loc='center right',  prop={'size': 24, 'family':'Adobe Hebrew'}, labelspacing = 1.5)

    #bbox_to_anchor=(1, 0.5),
    
    # plt.legend(handles=legend_elements, loc='top')
    plt.show()






y_model_pred = [1668.0000442157734, 1744.8137624584683, 1455.0442425107983, 1713.9302247559085, 1586.7456681556757, 1629.1689724045837, 1652.6889631118804, 1435.2192508774904, 1617.851758828787, 1484.6080640257187, 1701.223189250902, 1384.2904653701078, 1192.8982908058913, 1740.1316020665076, 1553.219436115604, 1729.5798921126366, 1356.5888523528563, 1452.2448696473614, 1480.6604255152597, 1541.865567999074, 1546.5416365957926, 1717.6248877442667, 1629.7040883958352, 1434.2671863364155, 1259.440319751302, 1589.414024120808, 1452.4945329307052, 1597.652274789161, 1731.6618358681114, 1632.0287573287028, 1452.231524566389, 1435.3737836177686, 1727.4719207101432, 1424.0278187673284, 1462.556657307543, 1676.0320255576307, 1725.8646497785976, 1689.7605275765868, 1499.8916314569449, 1523.3825182355554, 1467.0779390472358, 1713.207846859224, 1415.1803817126731, 1458.3333252438417, 1441.7045964639422, 1724.8706273276705, 1622.2299268848126, 1481.6963302024599, 1540.6906462623758, 1619.7656763245825, 1643.5889583325188, 1541.8331167065737, 1536.4961496138444, 1729.7329855357584, 1513.2125428136371, 1373.6715539405627, 1503.9703069738055, 1693.414277650194, 1599.5042463648535, 1450.9020847405989, 1774.770594480205, 1605.8298532326648, 1536.5072855676126, 1735.694082161671, 1502.4099064049628, 1624.1377603425751, 1292.372871606271, 1354.8475605962312, 1603.990110349744, 1364.4952310790723, 1407.7777841989964, 1566.3290351233034, 1706.5753243636734, 1562.7034003928932, 1594.131623966275, 1422.777440575141, 1666.8246188945461, 1539.8609310568386, 1612.9710585473651, 1685.7868844934137, 1439.632282328768, 1082.0317687751544, 1566.903752428841, 1618.7075387584034, 1635.009498339717, 1507.1990872455078, 1620.979264531429, 1622.0547982169828, 1478.3817005984033, 1404.7259969710153, 1438.9706390505737, 1517.3959947450553, 1796.4021212231737, 1451.9957441149304, 1397.6738190233639, 1464.267632023992, 1835.3230728609099, 1642.9211358210812, 1590.5190257921797, 1666.579839554599, 1625.7307745246658, 1468.2256078253674, 1571.017372687062, 1479.528708556311, 1740.3271033095948, 1740.7756542041848, 1714.4295652465842, 1504.6179353840319, 1295.8264093082225, 1587.306720663584, 1601.266295689362, 1535.2144554883032, 1351.912198153615, 1663.9151509092671, 1485.9579979197545, 930.6128516757714, 1678.878673955314, 1510.1970373618497, 1380.4379570377127, 1602.488007633805, 1562.1532431671887, 1631.2297888322926, 1660.8916647297472, 1472.4755287825824, 1754.6732672197472, 1665.9977056059818, 1530.1831230750004, 1557.8174351391626, 1705.474865700236, 1602.6677100150623, 1778.6251931109969, 1544.0167617750537, 1648.1978484956553, 1347.9360244390136, 1629.6321149432727, 1484.9194697047496, 1469.520415333101, 1202.2114716220353, 1629.9209235324156, 1768.2695038745233, 1536.3958105666773, 1395.9494672450633, 1557.5454087656444, 1282.136422765105, 1655.1516534877737, 1645.1379451754224, 1699.223476350881, 1733.8566589774478, 1465.3610403775133, 1364.0995827191134, 1404.0642292909956, 1518.8089573281331, 1500.2747697444881, 1367.5271542539676, 1510.3090299250157, 1640.7666095887948, 1502.8749839823527, 1627.2646288875883, 1715.474469851308, 1745.324778365706, 1592.5549081541878, 1623.855215828811, 1667.2269164622276, 1669.1949463483995, 1633.441719547581, 1643.4944291196814, 1565.2295662364418, 1749.7763945954891, 1528.1030537744045, 1580.3043676482228, 1621.5766994574917, 1430.6366571947642, 1625.3512521395246, 1382.5139091090698, 1405.771427548104, 1664.9419860357943, 1548.1027531953057, 1512.7386472134299, 1626.0949884418285, 1488.9160773675233, 1473.066098744956, 1562.867288227033, 1631.663349324574, 1353.6534658477137, 1618.816906240717, 1608.6716740515667, 1684.7682809976345, 1074.9925607568894, 1455.3126183578663, 1781.4781907367546, 1555.202271150298, 1520.962382194529, 1749.655533236561, 1781.8252263540164, 1470.3274632275422, 1818.2298186166945, 1742.2219497500707, 1702.0272882654613, 1673.6515450923844, 1199.0201957252448, 1547.918619188393, 1456.0860201608966, 1527.6993634913865, 1687.3806101472771, 1762.4729161696346, 1526.9186127701753, 1699.952760652955, 1709.2485924678917, 1719.239589710156, 1518.9449081656437, 1571.1593232003606, 1706.3951901071405, 1600.9239281509879, 1529.2302804839285, 1751.8177353268834, 1544.4153986146111, 1576.260960698749, 1402.3640367557634, 1780.5376184301667, 1598.875201683479, 1669.8006253067515, 1786.1955327468756, 1384.4079817333063, 1359.2797388112199, 1058.4267004017956, 1567.8662878933635, 1582.4139079659365, 1793.3120213011257, 1651.3287000441105, 1459.6033681262877, 1615.0833718239608, 1650.4351870175813, 1536.6976312243487, 1673.648781338444, 1740.0298867143197, 1619.4354709178936, 1473.6699264646736, 1654.8824256362236, 1449.7560157426449, 1364.2779806337148, 1402.9091930663267, 1587.5661557488468, 1443.260101359225, 1604.4366128309082, 1642.5275317553817, 1333.913227885286, 1652.7147353198313, 1693.5946200233561, 1598.2822650418063, 1443.9798414617812, 1544.3496135090056, 1612.7732393159624, 1530.6976389457097, 1510.4686324537731, 1693.395087208021, 1425.245515314118, 1572.6591193537065, 1511.9312456786336, 1600.5669039105478, 1673.4533290593727, 1684.3714867002625, 1286.1440560231713, 1476.4483414965848, 1301.300079534449, 1547.4175035711053, 1439.5947711152944, 1601.4489975304166, 1591.5909259495043, 1543.6585632315027, 1648.4325089159177, 1469.5055157967274, 1595.7096370588165, 1688.3939472020104, 1595.0848263861496, 1525.5280535129536, 1571.961160285482, 1651.5283439104567, 1848.9648656134339, 1658.285193447893, 1750.4434006291717, 1656.47209552699, 1402.3413917251398, 1550.2069027463826, 1656.722991200295, 1588.7090690581124, 1592.4315275620536]
y_elo_standard_pred = [1583, 1559, 1578, 1571, 1549, 1532, 1579, 1537, 1534, 1538, 1588, 1562, 1525, 1591, 1542, 1546, 1570, 1544, 1564, 1571, 1573, 1583, 1576, 1574, 1523, 1582, 1523, 1592, 1557, 1564, 1569, 1592, 1550, 1533, 1547, 1544, 1539, 1571, 1538, 1538, 1566, 1532, 1537, 1581, 1525, 1575, 1588, 1544, 1552, 1566, 1589, 1574, 1564, 1584, 1574, 1530, 1528, 1542, 1565, 1549, 1597, 1554, 1563, 1589, 1568, 1556, 1522, 1576, 1549, 1565, 1531, 1594, 1593, 1552, 1575, 1533, 1581, 1595, 1542, 1594, 1576, 1521, 1570, 1557, 1589, 1551, 1562, 1545, 1582, 1530, 1575, 1541, 1542, 1538, 1554, 1546, 1550, 1531, 1587, 1593, 1526, 1535, 1544, 1539, 1547, 1571, 1555, 1590, 1529, 1548, 1543, 1575, 1524, 1538, 1567, 1567, 1587, 1579, 1532, 1550, 1548, 1547, 1584, 1536, 1595, 1583, 1526, 1546, 1575, 1571, 1551, 1577, 1572, 1536, 1582, 1576, 1577, 1560, 1584, 1550, 1591, 1536, 1541, 1576, 1569, 1583, 1594, 1544, 1565, 1552, 1541, 1540, 1529, 1538, 1587, 1531, 1536, 1535, 1591, 1595, 1552, 1581, 1533, 1586, 1568, 1547, 1532, 1542, 1541, 1584, 1585, 1581, 1549, 1527, 1562, 1562, 1548, 1558, 1572, 1540, 1567, 1587, 1596, 1561, 1545, 1554, 1578, 1565, 1578, 1576, 1568, 1587, 1594, 1551, 1535, 1596, 1581, 1594, 1574, 1576, 1548, 1533, 1523, 1579, 1555, 1567, 1580, 1598, 1569, 1583, 1534, 1581, 1548, 1567, 1543, 1521, 1583, 1521, 1547, 1532, 1597, 1597, 1521, 1567, 1521, 1536, 1541, 1537, 1589, 1592, 1532, 1568, 1566, 1568, 1597, 1524, 1570, 1530, 1530, 1536, 1564, 1593, 1597, 1544, 1580, 1571, 1557, 1570, 1546, 1569, 1551, 1531, 1553, 1563, 1546, 1525, 1590, 1546, 1543, 1543, 1536, 1523, 1565, 1541, 1551, 1525, 1576, 1581, 1523, 1538, 1564, 1587, 1593, 1542, 1539, 1540, 1597, 1558, 1589, 1553, 1546, 1578, 1598, 1553, 1577, 1543]
y_test = [1581, 1943, 1301, 1585, 1897, 1596, 1550, 1505, 1480, 1469, 1797, 1057, 1128, 1705, 1586, 1702, 1297, 1509, 1248, 1615, 1500, 1827, 1483, 1400, 1043, 1678, 1365, 1902, 1750, 1289, 1146, 1754, 1657, 1455, 1527, 1514, 1601, 1443, 1496, 1540, 1349, 1536, 1566, 1603, 1193, 1602, 1728, 1473, 1834, 1343, 1825, 1420, 1158, 1672, 1508, 1423, 1451, 1579, 1569, 1474, 2088, 1751, 1215, 1541, 1381, 1760, 1015, 1530, 1708, 1500, 1385, 1706, 1895, 1674, 1556, 1313, 1662, 1928, 1744, 1706, 1604, 880, 1474, 1866, 2034, 1714, 1246, 1702, 1605, 1336, 1566, 1386, 1985, 1465, 1876, 1691, 1791, 1664, 1687, 1877, 1434, 1307, 1522, 1539, 1690, 1645, 1969, 1815, 1034, 1734, 1404, 1556, 1248, 1503, 1272, 1042, 1807, 1427, 1328, 1639, 1547, 1684, 1766, 1447, 1810, 1333, 1292, 1600, 1494, 1531, 1806, 1647, 1461, 1428, 1649, 1536, 1647, 1095, 1571, 1754, 1799, 1377, 1478, 1171, 1342, 1581, 1907, 1825, 1195, 1850, 1608, 1653, 1365, 1347, 1731, 1584, 1500, 1586, 1668, 1962, 1664, 1561, 1420, 1690, 1516, 1717, 1412, 1638, 1375, 1781, 1500, 1527, 1863, 1493, 1375, 1360, 1827, 1897, 1640, 1488, 1300, 1522, 1920, 1219, 1466, 1750, 1735, 1252, 1481, 1686, 1380, 1644, 1967, 1708, 1482, 1607, 1674, 1868, 1532, 1171, 1575, 1494, 1183, 1673, 1873, 1483, 1758, 2020, 1311, 1594, 1306, 1528, 1731, 1292, 1482, 1596, 1755, 920, 1661, 1436, 1964, 2006, 1030, 1433, 884, 1590, 1626, 1427, 1728, 1754, 1285, 1377, 1235, 1504, 2103, 1282, 1411, 1560, 1415, 1448, 1300, 1688, 1658, 1733, 1575, 1445, 1981, 1369, 1570, 1260, 1756, 1396, 1649, 1175, 1556, 1198, 1522, 1666, 1381, 1540, 1421, 1142, 1246, 1638, 1791, 1337, 2065, 1708, 1168, 1497, 1160, 1719, 1803, 1744, 1596, 1402, 2059, 2079, 1783, 1806, 1776, 1538, 1896, 1566, 1588, 1617]





if __name__ == '__main__':
    main()